<?xml version="1.0" encoding="ISO-8859-1" ?>
<mdscript name="Test_Named_Pipe" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="md.xsd">

<!--
Test cue that excercises the named pipe library.
Server side is written in python.

TODO: a full (though simple) app that uses a pipe regularly during runtime,
 eg. for extra hotkeys.
-->

<cues>


  <!-- Testing include_actions on lib stored in variable. -->
  <!-- <library name="Test_Lib_Actions"> -->
    <!-- <actions> -->
      <!-- <debug_text text="'Test_Lib_Actions called'" filter="general"/> -->
    <!-- </actions> -->
  <!-- </library> -->
  
  <!--
  <cue name="Test_Lib_Ref" instantiate="true" namespace="this" checkinterval="10s" checktime="30s">
    <actions>
      <debug_text text="'Trying to call Test_Lib_Actions from cue'" filter="general"/>
      <set_value name="$test_lib_actions_var" exact="Test_Lib_Actions"/>
      <include_actions ref="$test_lib_actions_var"/>
    </actions>
  </cue> -->
  
  <!-- <library name="Test_Lib_Wrap"> -->
    <!-- <params> -->
      <!-- <param name="Test_Lib_Actions_param"/> -->
    <!-- </params> -->
    <!-- <actions> -->
      <!-- <debug_text text="'Trying to call Test_Lib_Actions from lib param; Test_Lib_Actions_param = %s'.[$Test_Lib_Actions_param]" filter="general"/> -->
      <!-- <include_actions ref="$Test_Lib_Actions_param"/> -->
    <!-- </actions> -->
  <!-- </library> -->
  
  <!-- <library name="Test_Lib_Wrap_Repeat" instantiate="true" checkinterval="5s"> -->
    <!-- <params> -->
      <!-- <param name="Test_Lib_Actions_param"/> -->
    <!-- </params> -->
    <!-- <actions> -->
      <!-- <debug_text text="'Trying to call Test_Lib_Actions from lib param; Test_Lib_Actions_param = %s'.[$Test_Lib_Actions_param]" filter="general"/> -->
      <!-- <include_actions ref="$Test_Lib_Actions_param"/> -->
    <!-- </actions> -->
  <!-- </library> -->
  
  <!-- <cue name="Test_Lib_Wrap_Ref_Wrap" instantiate="true" checkinterval="5s"> -->
    <!-- <actions> -->
      <!-- <set_value name="$test_lib_actions_var" exact="Test_Lib_Actions"/> -->
      <!-- <debug_text text="'Trying to call Test_Lib_Actions from cue; test_lib_actions_var = %s'.[$test_lib_actions_var]" filter="general"/> -->
      <!-- <include_actions ref="$test_lib_actions_var"/> -->
    <!-- </actions> -->
    <!-- <cues> -->
      <!-- This started working at some point. -->
      <!-- <cue name="Test_Lib_Wrap_Ref_Wrapped" ref="Test_Lib_Wrap"> -->
        <!-- <param name="Test_Lib_Actions_param" value="$test_lib_actions_var"/> -->
      <!-- </cue> -->
      
      <!-- This works after the above started working. -->
      <!-- <cue name="Test_Lib_Wrap_Ref_Wrapped" ref="Test_Lib_Wrap"> -->
        <!-- <param name="Test_Lib_Actions_param" value="Test_Lib_Actions"/> -->
      <!-- </cue> -->
    <!-- </cues>     -->
  <!-- </cue>  -->
  
  <!-- Now this appears to be working; weird. -->
  <!-- <cue name="Test_Lib_Wrap_Ref" ref="Test_Lib_Wrap_Repeat"> -->
    <!-- <param name="Test_Lib_Actions_param" value="Test_Lib_Actions"/> -->
  <!-- </cue> -->
  
  <!-- Try with different names; maybe loading order matters; these work. -->
  <!-- <cue name="A_Test_Lib_Wrap_Ref" ref="Test_Lib_Wrap_Repeat"> -->
    <!-- <param name="Test_Lib_Actions_param" value="Test_Lib_Actions"/> -->
  <!-- </cue> -->
  
  <!-- <cue name="Z_Test_Lib_Wrap_Ref" ref="Test_Lib_Wrap_Repeat"> -->
    <!-- <param name="Test_Lib_Actions_param" value="Test_Lib_Actions"/> -->
  <!-- </cue> -->
  
  <!-- Try the actual server lib... this fails? -->
  <!-- <cue name="Host_Server_Reader_unwrapped" ref="md.Pipe_Server_Lib.Server_Reader"> -->
    <!-- <param name="Actions_On_Init"     value="Test_Lib_Actions"/> -->
  <!-- </cue> -->
      
  <!-- Try the actual server lib... this works? -->
  <!-- <cue name="Server_Reader_Wrap" instantiate="true" checkinterval="5s"> -->
    <!-- <cues> -->
      <!-- <cue name="Server_Reader" ref="md.Pipe_Server_Lib.Server_Reader"> -->
        <!-- <param name="Actions_On_Init"     value="Test_Lib_Actions"/> -->
      <!-- </cue> -->
    <!-- </cues>     -->
  <!-- </cue>  -->
  
  <!-- Maybe just a one-step shell would work? yes, works.-->  
  <!-- <cue name="Server_Reader_Wrap"> -->
    <!-- <cues> -->
      <!-- <cue name="Host_Server_Reader" ref="md.Pipe_Server_Lib.Server_Reader"> -->
        <!-- <param name="Actions_On_Init"     value="Test_Lib_Actions"/> -->
      <!-- </cue> -->
    <!-- </cues> -->
  <!-- </cue> -->


  <cue name="Check_Lua_Loaded" instantiate="true">
    <conditions>
      <event_ui_triggered screen="'Named_Pipes'" control="'reloaded'" />
    </conditions>
    <actions>
      <signal_cue_instantly cue="md.Chat_Window_API.Print" param="'Pipe Test; Lua load completed'"/>
    </actions>
  </cue>
  
  <!-- 
  Testing cue will restart every so many seconds.
  This makes it a little more useful with /refreshmd commands.
  -->
  <cue name="Test_Named_Pipe" instantiate="true" namespace="this" checkinterval="10s" checktime="30s">
  
    <conditions>
      <!-- Uncomment to disable this cue. -->
      <check_value value="false"/>
    </conditions>>
  
    <actions>
      <!-- Set up some names.-->
      <set_value name="$Debug_File_Name" exact="'responses.log'"/>
      <set_value name="$Debug_Directory" exact="'interface'"/>
      
      <show_notification text="'Test_Named_Pipe started'" sound="notification_warning" priority="2" />
      
      <!-- Do some test writes/reads. This follows the same pattern as the lua test code. -->
      
      <!-- Individual writes. -->
      <signal_cue_instantly cue="md.Named_Pipes.Write" param="table[$pipe='x4_pipe', $msg='write:[test1]5', $cue=Write_Callback]"/>
      <signal_cue_instantly cue="md.Named_Pipes.Write" param="table[$pipe='x4_pipe', $msg='write:[test2]6', $cue=Write_Callback]"/>
      <signal_cue_instantly cue="md.Named_Pipes.Write" param="table[$pipe='x4_pipe', $msg='write:[test3]7', $cue=Write_Callback]"/>
      <signal_cue_instantly cue="md.Named_Pipes.Write" param="table[$pipe='x4_pipe', $msg='write:[test4]8', $cue=Write_Callback]"/>
      
      <!-- Transaction with write/read. -->
      <signal_cue_instantly cue="md.Named_Pipes.Write" param="table[$pipe='x4_pipe', $msg='read:[test1]', $cue=Write_Callback]"/>
      <signal_cue_instantly cue="md.Named_Pipes.Read"  param="table[$pipe='x4_pipe', $cue=Read_Callback]"/>
      
      <!-- Pipelined transactions. -->
      <signal_cue_instantly cue="md.Named_Pipes.Write" param="table[$pipe='x4_pipe', $msg='read:[test2]', $cue=Write_Callback]"/>
      <signal_cue_instantly cue="md.Named_Pipes.Write" param="table[$pipe='x4_pipe', $msg='read:[test3]', $cue=Write_Callback]"/>
      <signal_cue_instantly cue="md.Named_Pipes.Write" param="table[$pipe='x4_pipe', $msg='read:[test4]', $cue=Write_Callback]"/>
      <signal_cue_instantly cue="md.Named_Pipes.Read"  param="table[$pipe='x4_pipe', $cue=Read_Callback]"/>
      <signal_cue_instantly cue="md.Named_Pipes.Read"  param="table[$pipe='x4_pipe', $cue=Read_Callback]"/>
      <signal_cue_instantly cue="md.Named_Pipes.Read"  param="table[$pipe='x4_pipe', $cue=Read_Callback]"/>
      
      <!-- Generic pipe check. -->
      <signal_cue_instantly cue="md.Named_Pipes.Check" param="table[$pipe='x4_pipe', $cue=Check_Callback]"/>
      
      
      <!-- Tell the server to close the pipe. Server will wait for pending reads to complete. -->
      <!-- <signal_cue_instantly cue="md.Named_Pipes.Write" param="table[$pipe='x4_pipe', $msg='close']"/> -->
      
      <!-- Tell MD/lua to close the client pipe. TODO: not until reads finished. -->
      <!-- <signal_cue_instantly cue="md.Named_Pipes.Close" param="'x4_pipe'"/> -->
      <!-- Verify above closed the pipe. -->
      <!-- <signal_cue_instantly cue="md.Named_Pipes.Connected" param="table[$pipe='x4_pipe', $cue=Connected_Callback']"/> -->
    </actions>
    
    <cues>
    </cues>
  </cue> <!-- end Test_Named_Pipe -->
      
  <!--This is called from the lib once a read is complete.
      Note: this can't be a child of the cue making requests, since that cue
      will die off once its actions complete, leaving no child to capture
      responses. (Unless this is set to no instantiate, but then it is only
      good for one read/write; if it resets itself, it would keep the test
      cue alive forever in teh save.)
  -->
  <cue name="Read_Callback" instantiate="true" namespace="this">
    <conditions>
      <event_cue_signalled/>
    </conditions>    
    <actions>
      <!-- Pull the value out of the param. -->
      <set_value name="$read_result" exact="event.param"/>
      <!-- Log it. -->
      <signal_cue_instantly cue="md.Chat_Window_API.Print" param="'Pipe Test;Read result: ' + $read_result"/>
    </actions>
  </cue>
    
  <cue name="Write_Callback" instantiate="true" namespace="this">
    <conditions>
      <event_cue_signalled/>
    </conditions>    
    <actions>
      <!-- Pull the value out of the param. -->
      <set_value name="$result" exact="event.param"/>
      <!-- Log it. -->
      <signal_cue_instantly cue="md.Chat_Window_API.Print" param="'Pipe Test;Write result: ' + $result"/>      
    </actions>
  </cue>
  
  <cue name="Check_Callback" instantiate="true" namespace="this">
    <conditions>
      <event_cue_signalled/>
    </conditions>    
    <actions>
      <!-- Pull the value out of the param. -->
      <set_value name="$result" exact="event.param"/>
      <!-- Log it. -->
      <signal_cue_instantly cue="md.Chat_Window_API.Print" param="'Pipe Test;Connected? ' + $result"/>      
    </actions>
  </cue>
  
  
  
</cues>

</mdscript>