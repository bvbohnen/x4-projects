<?xml version="1.0" encoding="utf-8" ?>
<mdscript name="Time_API" 
          xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" >

<!--
  MD side of the time api.
  This will mostly act as a wrapper on the lua functions, which have
  access to the real time (as opposed to game time).
-->
<cues>
  
  <!-- Register the python server. -->
  <cue name="Register_Pipe_Server" instantiate="true">
    <conditions>
      <event_cue_signalled cue="md.Pipe_Server_Host.Reloaded" />
    </conditions>
    <actions>
      <signal_cue_instantly
        cue="md.Pipe_Server_Host.Register_Module"
        param="'extensions/sn_mod_support_apis/python/Time_API.py'"/>
    </actions>
  </cue>
  
  <!-- 
  MD to lua heartbeat, firing every unpaused frame. 
  
  The primary motivation for this is that the lua side Update events
  sometimes go many frames/seconds without firing, though normally seem
  to fire regularly.  The reason for these hiccups is not understood,
  but an md-trigger signal to lua can provide a way to reliably fire
  every frame that the game is unpaused, alleviating the problem somwhat.
  -->
  <cue name="MD_New_Frame" instantiate="true" checkinterval="1ms">
    <!--No conditions.-->
    <actions>
      <raise_lua_event name="'Time.MD_New_Frame'"/>
    </actions>
  </cue>


  <!--
  The lua side will watch for onUpdate script calls as well as md
  heartbeat signals, and use these to generate a unified heartbeat,
  firing only once per frame at most (duplicate events suppressed).
  
  Users can listen to this cue being signalled in MD to trigger their
  cues every frame.
  
  The param will be the current engine time.
  <cue name="Frame_Advanced" instantiate="true" checkinterval="1ms">
    <conditions>
      <event_ui_triggered screen="'Time'" control="'Frame_Advanced'" />
    </conditions>
    <actions>
      <raise_lua_event name="'Time.MD_Heartbeat'"/>
    </actions>
  </cue>
  -->
  
</cues>
  
</mdscript>